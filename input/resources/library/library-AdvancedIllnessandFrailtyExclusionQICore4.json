{
  "resourceType": "Library",
  "id": "AdvancedIllnessandFrailtyExclusionQICore4",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://ecqi.healthit.gov/ecqms/Library/AdvancedIllnessandFrailtyExclusionQICore4",
  "version": "5.0.000",
  "name": "AdvancedIllnessandFrailtyExclusionQICore4",
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  } ]
}