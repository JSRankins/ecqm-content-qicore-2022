{
  "resourceType": "Library",
  "id": "TJCOverall",
  "meta": {
    "versionId": "1",
    "lastUpdated": "2023-02-02T08:30:34.053-07:00",
    "source": "#XCcmnH5zSljBHax7",
    "profile": [ "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/computable-library-cqfm" ]
  },
  "language": "en",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://ecqi.healthit.gov/ecqms/Library/TJCOverall",
  "version": "8.3.000",
  "name": "TJCOverall",
  "status": "active",
  "experimental": false,
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "date": "2023-02-02T15:30:34+00:00",
  "publisher": "The Joint Commission",
  "description": "Common functions and definitions used by TJC measures",
  "content": [ {
    "contentType": "text/cql",
    "data": "bGlicmFyeSBUSkNPdmVyYWxsIHZlcnNpb24gJzguMy4wMDAnCi8qCkB1cGRhdGU6IEJUUiAyMDIwLTAzLTMxIC0+CkluY3JlbWVudGVkIHZlcnNpb24gdG8gNS4wLjAwMApVcGRhdGVkIEZISVIgdmVyc2lvbiB0byA0LjAuMQoKQHVwZGF0ZTogQlRSIDIwMjEtMDctMDIgLT4KSW5jcmVtZW50ZWQgR0NMIHZlcnNpb24gdG8gNi4wLjAwMApBcHBsaWVkIDIwMjEgQVUgY2hhbmdlcwoKQHVwZGF0ZTogQlRSIDIwMjItMDUtMjYgLT4KUmVmcmVzaCBmcm9tIDIwMjIgQVUKKi8KCnVzaW5nIFFJQ29yZSB2ZXJzaW9uICc0LjEuMScKCmluY2x1ZGUgRkhJUkhlbHBlcnMgdmVyc2lvbiAnNC4xLjAwMCcgY2FsbGVkIEZISVJIZWxwZXJzCmluY2x1ZGUgQ1FNQ29tbW9uICAgdmVyc2lvbiAnMS4wLjAwMCcgY2FsbGVkIENRTUNvbW1vbgppbmNsdWRlIFFJQ29yZUNvbW1vbiB2ZXJzaW9uICcxLjIuMDAwJyBjYWxsZWQgUUlDb3JlQ29tbW9uCgp2YWx1ZXNldCAiQ29tZm9ydCBNZWFzdXJlcyI6ICdodHRwOi8vY3RzLm5sbS5uaWguZ292L2ZoaXIvVmFsdWVTZXQvMS4zLjYuMS40LjEuMzM4OTUuMS4zLjAuNDUnCnZhbHVlc2V0ICJEaXNjaGFyZ2UgVG8gQWN1dGUgQ2FyZSBGYWNpbGl0eSI6ICdodHRwOi8vY3RzLm5sbS5uaWguZ292L2ZoaXIvVmFsdWVTZXQvMi4xNi44NDAuMS4xMTM4ODMuMy4xMTcuMS43LjEuODcnCnZhbHVlc2V0ICJEaXNjaGFyZ2VkIHRvIEhlYWx0aCBDYXJlIEZhY2lsaXR5IGZvciBIb3NwaWNlIENhcmUiOiAnaHR0cDovL2N0cy5ubG0ubmloLmdvdi9maGlyL1ZhbHVlU2V0LzIuMTYuODQwLjEuMTEzODgzLjMuMTE3LjEuNy4xLjIwNycKdmFsdWVzZXQgIkRpc2NoYXJnZWQgdG8gSG9tZSBmb3IgSG9zcGljZSBDYXJlIjogJ2h0dHA6Ly9jdHMubmxtLm5paC5nb3YvZmhpci9WYWx1ZVNldC8yLjE2Ljg0MC4xLjExMzg4My4zLjExNy4xLjcuMS4yMDknCnZhbHVlc2V0ICJFbWVyZ2VuY3kgRGVwYXJ0bWVudCBWaXNpdCI6ICdodHRwOi8vY3RzLm5sbS5uaWguZ292L2ZoaXIvVmFsdWVTZXQvMi4xNi44NDAuMS4xMTM4ODMuMy4xMTcuMS43LjEuMjkyJwp2YWx1ZXNldCAiSGVtb3JyaGFnaWMgU3Ryb2tlIjogJ2h0dHA6Ly9jdHMubmxtLm5paC5nb3YvZmhpci9WYWx1ZVNldC8yLjE2Ljg0MC4xLjExMzg4My4zLjExNy4xLjcuMS4yMTInCnZhbHVlc2V0ICJJc2NoZW1pYyBTdHJva2UiOiAnaHR0cDovL2N0cy5ubG0ubmloLmdvdi9maGlyL1ZhbHVlU2V0LzIuMTYuODQwLjEuMTEzODgzLjMuMTE3LjEuNy4xLjI0NycKdmFsdWVzZXQgIkxlZnQgQWdhaW5zdCBNZWRpY2FsIEFkdmljZSI6ICdodHRwOi8vY3RzLm5sbS5uaWguZ292L2ZoaXIvVmFsdWVTZXQvMi4xNi44NDAuMS4xMTM4ODMuMy4xMTcuMS43LjEuMzA4Jwp2YWx1ZXNldCAiTm9uLUVsZWN0aXZlIElucGF0aWVudCBFbmNvdW50ZXIiOiAnaHR0cDovL2N0cy5ubG0ubmloLmdvdi9maGlyL1ZhbHVlU2V0LzIuMTYuODQwLjEuMTEzODgzLjMuMTE3LjEuNy4xLjQyNCcKdmFsdWVzZXQgIk9ic2VydmF0aW9uIFNlcnZpY2VzIjogJ2h0dHA6Ly9jdHMubmxtLm5paC5nb3YvZmhpci9WYWx1ZVNldC8yLjE2Ljg0MC4xLjExMzc2Mi4xLjQuMTExMS4xNDMnCnZhbHVlc2V0ICJQYXRpZW50IEV4cGlyZWQiOiAnaHR0cDovL2N0cy5ubG0ubmloLmdvdi9maGlyL1ZhbHVlU2V0LzIuMTYuODQwLjEuMTEzODgzLjMuMTE3LjEuNy4xLjMwOScKCnBhcmFtZXRlciAiTWVhc3VyZW1lbnQgUGVyaW9kIiBJbnRlcnZhbDxEYXRlVGltZT4KICBkZWZhdWx0IEludGVydmFsW0AyMDIyLTAxLTAxVDAwOjAwOjAwLjAwMFosIEAyMDIzLTAxLTAxVDAwOjAwOjAwLjAwMFopCiAgCmNvbnRleHQgUGF0aWVudAoKZGVmaW5lICJOb24gRWxlY3RpdmUgSW5wYXRpZW50IEVuY291bnRlciI6CiAgWyJFbmNvdW50ZXIiOiAiTm9uLUVsZWN0aXZlIElucGF0aWVudCBFbmNvdW50ZXIiXSBOb25FbGVjdGl2ZUVuY291bnRlcgoJCXdoZXJlIENRTUNvbW1vbi4iTGVuZ3RoSW5EYXlzIihOb25FbGVjdGl2ZUVuY291bnRlci5wZXJpb2QpIDw9IDEyMAogICAgICBhbmQgTm9uRWxlY3RpdmVFbmNvdW50ZXIucGVyaW9kIGVuZHMgZHVyaW5nIGRheSBvZiAiTWVhc3VyZW1lbnQgUGVyaW9kIgogICAgICAvKiB0aGlzIGRvZXMgbm90IHdvcmsgYnV0IGFib3ZlIHdvcmtzIC4uLiBhbmQgRS5wZXJpb2QgZW5kcyBkdXJpbmcgZGF5IG9mICJNZWFzdXJlbWVudCBQZXJpb2QiICovCgpkZWZpbmUgIkFsbCBTdHJva2UgRW5jb3VudGVyIjoKICAiTm9uIEVsZWN0aXZlIElucGF0aWVudCBFbmNvdW50ZXIiIE5vbkVsZWN0aXZlRW5jb3VudGVyCiAgICB3aGVyZSAoQ1FNQ29tbW9uLiJQcmluY2lwYWxEaWFnbm9zaXMiKE5vbkVsZWN0aXZlRW5jb3VudGVyKS5jb2RlIGluICJIZW1vcnJoYWdpYyBTdHJva2UiCiAgICAgICAgb3IgQ1FNQ29tbW9uLiJQcmluY2lwYWxEaWFnbm9zaXMiKE5vbkVsZWN0aXZlRW5jb3VudGVyKS5jb2RlIGluICJJc2NoZW1pYyBTdHJva2UiKQogICAgICAgIAogIApkZWZpbmUgIklzY2hlbWljIFN0cm9rZSBFbmNvdW50ZXIiOgogICJFbmNvdW50ZXIgd2l0aCBQcmluY2lwYWwgRGlhZ25vc2lzIGFuZCBBZ2UiIEVuY291bnRlcldpdGhBZ2UKCQl3aGVyZSBDUU1Db21tb24uIlByaW5jaXBhbERpYWdub3NpcyIoRW5jb3VudGVyV2l0aEFnZSkuY29kZSBpbiAiSXNjaGVtaWMgU3Ryb2tlIgoKZGVmaW5lICJJc2NoZW1pYyBTdHJva2UgRW5jb3VudGVycyB3aXRoIERpc2NoYXJnZSBEaXNwb3NpdGlvbiI6CiAgIklzY2hlbWljIFN0cm9rZSBFbmNvdW50ZXIiIElzY2hlbWljU3Ryb2tlRW5jb3VudGVyCgkJd2hlcmUgSXNjaGVtaWNTdHJva2VFbmNvdW50ZXIuaG9zcGl0YWxpemF0aW9uLmRpc2NoYXJnZURpc3Bvc2l0aW9uIGluICJEaXNjaGFyZ2UgVG8gQWN1dGUgQ2FyZSBGYWNpbGl0eSIKCQkJb3IgSXNjaGVtaWNTdHJva2VFbmNvdW50ZXIuaG9zcGl0YWxpemF0aW9uLmRpc2NoYXJnZURpc3Bvc2l0aW9uIGluICJMZWZ0IEFnYWluc3QgTWVkaWNhbCBBZHZpY2UiCgkJCW9yIElzY2hlbWljU3Ryb2tlRW5jb3VudGVyLmhvc3BpdGFsaXphdGlvbi5kaXNjaGFyZ2VEaXNwb3NpdGlvbiBpbiAiUGF0aWVudCBFeHBpcmVkIgoJCQlvciBJc2NoZW1pY1N0cm9rZUVuY291bnRlci5ob3NwaXRhbGl6YXRpb24uZGlzY2hhcmdlRGlzcG9zaXRpb24gaW4gIkRpc2NoYXJnZWQgdG8gSG9tZSBmb3IgSG9zcGljZSBDYXJlIgoJCQlvciBJc2NoZW1pY1N0cm9rZUVuY291bnRlci5ob3NwaXRhbGl6YXRpb24uZGlzY2hhcmdlRGlzcG9zaXRpb24gaW4gIkRpc2NoYXJnZWQgdG8gSGVhbHRoIENhcmUgRmFjaWxpdHkgZm9yIEhvc3BpY2UgQ2FyZSIKCi8qIE9SSUcgICAgIHdoZXJlIEFnZUluWWVhcnNBdChkYXRlIGZyb20gc3RhcnQgb2YgQWxsU3Ryb2tlRW5jb3VudGVyLnBlcmlvZCk+PSAxOCAqLwovKkZJWCBjdXJyZW50IHByb2JsZW0gd2l0aCBBZ2VJblllYXJzQXQgcmVxdWlyZWQgYSBtb2RpZmllZCBhcHByb2FjaCAtIHJlZmVyIHRvIGh0dHBzOi8vZ2l0aHViLmNvbS9jcWZyYW1ld29yay9lY3FtLWNvbnRlbnQtcWljb3JlLTIwMjIvaXNzdWVzIDYqLwpkZWZpbmUgIkVuY291bnRlciB3aXRoIFByaW5jaXBhbCBEaWFnbm9zaXMgYW5kIEFnZSI6CiAgIkFsbCBTdHJva2UgRW5jb3VudGVyIiBBbGxTdHJva2VFbmNvdW50ZXIKICAgIHdoZXJlIENhbGN1bGF0ZUFnZUluWWVhcnNBdCAoIFBhdGllbnQuYmlydGhEYXRlLCBkYXRlIGZyb20gc3RhcnQgb2YgQWxsU3Ryb2tlRW5jb3VudGVyLnBlcmlvZCApID49IDE4CgpkZWZpbmUgIkNvbWZvcnQgTWVhc3VyZXMgZHVyaW5nIEhvc3BpdGFsaXphdGlvbiI6CiAgIklzY2hlbWljIFN0cm9rZSBFbmNvdW50ZXIiIElzY2hlbWljU3Ryb2tlRW5jb3VudGVyCiAgICB3aXRoICJJbnRlcnZlbnRpb24gQ29tZm9ydCBNZWFzdXJlcyIgQ29tZm9ydE1lYXN1cmUKICAgICBzdWNoIHRoYXQgQ29hbGVzY2Uoc3RhcnQgb2YgUUlDb3JlQ29tbW9uLlRvSW50ZXJ2YWwoQ29tZm9ydE1lYXN1cmUucGVyZm9ybWVkKSwgQ29tZm9ydE1lYXN1cmUuYXV0aG9yZWRPbikgZHVyaW5nIENRTUNvbW1vbi4iSG9zcGl0YWxpemF0aW9uV2l0aE9ic2VydmF0aW9uIihJc2NoZW1pY1N0cm9rZUVuY291bnRlcikKCmRlZmluZSAiRW5jb3VudGVyIHdpdGggQ29tZm9ydCBNZWFzdXJlcyBkdXJpbmcgSG9zcGl0YWxpemF0aW9uIjoKICAiSXNjaGVtaWMgU3Ryb2tlIEVuY291bnRlciIgSXNjaGVtaWNTdHJva2VFbmNvdW50ZXIKICAgIHdpdGggIkludGVydmVudGlvbiBDb21mb3J0IE1lYXN1cmVzIiBDb21mb3J0TWVhc3VyZQogICAgIHN1Y2ggdGhhdCBDb2FsZXNjZShzdGFydCBvZiBRSUNvcmVDb21tb24uIlRvSW50ZXJ2YWwiKENvbWZvcnRNZWFzdXJlLnBlcmZvcm1lZCksIENvbWZvcnRNZWFzdXJlLmF1dGhvcmVkT24pIGR1cmluZyBDUU1Db21tb24uIkhvc3BpdGFsaXphdGlvbldpdGhPYnNlcnZhdGlvbiIgKCBJc2NoZW1pY1N0cm9rZUVuY291bnRlciApCgpkZWZpbmUgIkludGVydmVudGlvbiBDb21mb3J0IE1lYXN1cmVzIjoKICAoIFsiU2VydmljZVJlcXVlc3QiOiBjb2RlIGluICJDb21mb3J0IE1lYXN1cmVzIl0gU1IKICAgIHdoZXJlIFNSLnN0YXR1cyBpbiB7ICdhY3RpdmUnLCAnY29tcGxldGVkJywgJ29uLWhvbGQnIH0KICAgICAgYW5kIFNSLmludGVudCA9ICdvcmRlcicKICAgICAgYW5kIFNSLmRvTm90UGVyZm9ybSBpcyBub3QgdHJ1ZQogICkgIAogICAgdW5pb24gKCBbIlByb2NlZHVyZSI6ICJDb21mb3J0IE1lYXN1cmVzIl0gSW50ZXJ2ZW50aW9uUGVyZm9ybWVkCiAgICAgICAgd2hlcmUgSW50ZXJ2ZW50aW9uUGVyZm9ybWVkLnN0YXR1cyBpbiB7ICdjb21wbGV0ZWQnLCAnaW4tcHJvZ3Jlc3MnIH0KICAgICkKZGVmaW5lIGZ1bmN0aW9uICJUcnVuY2F0ZVRpbWUiKFZhbHVlIERhdGVUaW1lICk6CiAgRGF0ZVRpbWUoeWVhciBmcm9tIFZhbHVlLCBtb250aCBmcm9tIFZhbHVlLCBkYXkgZnJvbSBWYWx1ZSwgMCwgMCwgMCwgMCwgdGltZXpvbmVvZmZzZXQgZnJvbSBWYWx1ZSkKCmRlZmluZSBmdW5jdGlvbiAiQ2FsZW5kYXJEYXlPZk9yRGF5QWZ0ZXIiKFN0YXJ0VmFsdWUgRGF0ZVRpbWUgKToKICBJbnRlcnZhbFsiVHJ1bmNhdGVUaW1lIihTdGFydFZhbHVlKSwgIlRydW5jYXRlVGltZSIoU3RhcnRWYWx1ZSArIDIgZGF5cykpCgpkZWZpbmUgZnVuY3Rpb24gIkhvc3BpdGFsaXphdGlvbldpdGhPYnNlcnZhdGlvbkxlbmd0aG9mU3RheSIoRW5jb3VudGVyICJFbmNvdW50ZXIiKToKICBDUU1Db21tb24uIkxlbmd0aEluRGF5cyIoQ1FNQ29tbW9uLiJIb3NwaXRhbGl6YXRpb25XaXRoT2JzZXJ2YXRpb24iKEVuY291bnRlcikp"
  } ]
}